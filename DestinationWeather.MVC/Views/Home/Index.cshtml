@using DestinationWeather.MVC.Models
@using DestinationWeather.MVC.Controllers
@using Microsoft.JSInterop;
@inject IJSRuntime JSRuntime
@using static DestinationWeather.MVC.Models.WeatherData;
@model MapData

@{
    ViewData["Title"] = "Home Page";
}

<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
     integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
     crossorigin=""></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>

<script src="_content/BrowserInterop/scripts.js"></script>


<div class="text-center">
    <h1 class="display-4">DestinationWeather.MVC</h1>
    <p>Choose your destination!.</p>
</div>

<div class="text-center">
    <form method="post" name="modulo">
        <tr><td><b>Start: </b></td><td><input type="text" name="start" id="start" required></td></tr>
        <tr><td><b>Destination: </b></td><td><input type="text" name="destination" required></td></tr>
        <button type="submit" asp-area="" asp-controller="Home" asp-action="Search">Search</button>
    </form>
    <br />
</div>

<div id="map"></div>

<script>
    
        var map = L.map('map').setView([41.29, 12.27], 5);

        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        function onMapClick(e) {
                //var point = [];
                //point = @HomeController.PointInfo("LatLng(43.876164, 12.952709)");    
                //var point = JSRuntime.Current.InvokeAsync<object>("PointInfo", e.latlng); ?? PROVA 1
                //var point = DotNet.invokeMethodAsync('HomeController', 'PointInfo', e.latlng); ?? PROVA 2
                var marker = L.marker(e.latlng).addTo(map)
                marker.bindPopup("<b>"+point.City.CityName+"</b><br>").openPopup();
                markers.push(marker);
            }
            map.on('click', onMapClick);
       
</script>

@if (Model != null)
{
    <code>
        <script type="text/javascript">

            var lat = @Model.StartDatas[0].lat.ToString().Substring(0,4).Replace(",",".");
            var lon = @Model.StartDatas[0].lon.ToString().Substring(0,4).Replace(",",".");
            var marker1 = L.marker([lat, lon]).addTo(map)

            lat = @Model.DestinationDatas[0].lat.ToString().Substring(0,4).Replace(",",".");
            lon = @Model.DestinationDatas[0].lon.ToString().Substring(0,4).Replace(",",".");
            var marker2 = L.marker([lat, lon]).addTo(map)

            marker1.bindPopup("<b>@Model.StartDatas[0].display_name.ToString()</b><br>Weather:<br>@Model.StartCityAverages[0].Day.ToString("dd/MM/yyyy") | @Model.StartCityAverages[0].AveTemp.ToString("##0.00")°F").openPopup();
            marker2.bindPopup("<b>@Model.DestinationDatas[0].display_name.ToString()</b><br>Weather:<br>@Model.DestinationCityAverages[0].Day.ToString("dd/MM/yyyy") | @Model.DestinationCityAverages[0].AveTemp.ToString("##0.00")°F").openPopup();
            
            var latlngs = Array();
            latlngs.push(marker1.getLatLng());
            latlngs.push(marker2.getLatLng());
            var polyline = L.polyline(latlngs, {color: 'blue'}).addTo(map);
            map.fitBounds(polyline.getBounds());                
        </script>
    </code>
}